<?xml version="1.0" encoding="UTF-8"?>
<wdkModel>
  <querySet name="GeneTables" queryType="table" isCacheable="false">

    <!-- =================================================================== -->
    <!-- Gene Model -->
    <!-- =================================================================== -->

    <sqlQuery name="Transcripts">
      <column name="source_id" />
      <column name="transcript_id" />
      <column name="transcript_length" />
      <column name="transcript_exon_count" />
      <sql>
        <![CDATA[
		 SELECT gene_source_id AS source_id,
		 '@PROJECT_ID@'::text AS project_id,
		 transcript_source_id AS transcript_id,
		 transcript_length,
		 exon_count AS transcript_exon_count
		 FROM CBIL.TranscriptAttributes
	]]>
      </sql>
    </sqlQuery>


    <!-- =================================================================== -->
    <!-- Functional Annotation -->
    <!-- =================================================================== -->
    <sqlQuery name="GO">
      <column name="source_id" />
      <column name="go_term" />
      <column name="go_id" />
      <column name="ontology" />
      <column name="definition" />
      <column name="evidence_code" />
      <sql>
        <![CDATA[
		 SELECT goa.source_id,
		 '@PROJECT_ID@'::text AS project_id,
		 go_term,
		 ot.definition,
		 replace(go_term_id, '_', ':') AS go_id,
     array_to_string(array_unique(string_to_array(evidence_code, ',')), ',') AS evidence_code,
		 ontology_abbrev AS ontology
		 FROM CBIL.GoAssociation_TC goa,
		 SRes.OntologyTerm ot
		 WHERE evidence_code != 'closure'
		 AND ot.ontology_term_id = goa.ontology_term_id
		 ORDER BY ontology_abbrev, go_term
	]]>
      </sql>
    </sqlQuery>

    <sqlQuery name="Pathways">
      <column name="source_id" />
      <column name="pathway_source" />
      <column name="pathway_id" />
      <column name="pathway_name" />
      <column name="pathway_url" />
      <column name="pathway_url_param" />
      <column name="evidence" />
      <sql>
        <![CDATA[
		 SELECT ga.source_id,
		 p.name AS pathway_name, string_agg(pn.evidence_code, ',') AS evidence,
		 p.source_id AS pathway_id,
		 CASE WHEN p.source_id LIKE 'R%' THEN p.source_id 
		 ELSE p.source_id || '+' || (ga.annotation->>'entrez_id')::text END AS pathway_url_param,
		 CASE WHEN p.source_id LIKE 'R%' THEN '@REACTOME_PATHWAY_URL@' 
		 ELSE '@KEGG_PATHWAY_URL@' END AS pathway_url,
		 CASE WHEN p.source_id LIKE 'R%' THEN 'Reactome' 
		 ELSE 'KEGG' END AS pathway_source
		 FROM SRes.PathwayNode pn,
		 CBIL.GeneAttributes ga,
		 SRes.Pathway p
		 WHERE ga.gene_id = pn.row_id
		 AND pn.pathway_id = p.pathway_id
		 GROUP BY ga.source_id, ga.gene_symbol, p.source_id, pathway_name, pathway_url, pathway_url_param
		 ORDER BY pathway_name
	]]>
      </sql>
    </sqlQuery>

    <!-- =================================================================== -->
    <!-- Link outs -->
    <!-- =================================================================== -->

    <sqlQuery name="DbRefs_Gene">
      <column name="source_id" />
      <column name="external_links" />
      <column name="external_id" />
      <sql>
        <![CDATA[
        WITH id AS (##WDK_ID_SQL##),
      Links AS (
        SELECT
        id.source_id,
          glo.external_id,
          replace(replace(replace(glo.external_links, '+UCSC', '+' || upper(glo.organism) || '_UCSC'),
                                   '+VEGA', '+' || upper(glo.organism) || '_VEGA'),
                                   '+ENSEMBL_GENE', '+' || upper(glo.organism) || '_ENSEMBL_GENE')
          AS external_links
      FROM
         CBIL.GeneLinkOuts glo, id
      WHERE glo.source_id = id.source_id )
      SELECT
        source_id,
        external_id,
        multi_replace(external_links, 
        ARRAY['+HUMAN_VEGA_GENE_URL+', '+MOUSE_VEGA_GENE_URL+', '+HUMAN_ENSEMBL_GENE_URL+', '+MOUSE_ENSEMBL_GENE_URL+','+MGI_GENE_URL+', '+NCBI_GENE_URL+', '+HGNC_GENE_URL+', '+HUMAN_UCSC_GENE_URL+', '+MOUSE_UCSC_GENE_URL+', '+HUMAN_UCSC_BROWSER_URL+', '+MOUSE_UCSC_BROWSER_URL+'], 
            ARRAY['@HUMAN_VEGA_GENE_URL@', '@MOUSE_VEGA_GENE_URL@', '@HUMAN_ENSEMBL_GENE_URL@', '@MOUSE_ENSEMBL_GENE_URL@', '@MGI_GENE_URL@', '@NCBI_GENE_URL@', '@HGNC_GENE_URL@', '@HUMAN_UCSC_GENE_URL@', '@MOUSE_UCSC_GENE_URL@', '@HUMAN_UCSC_BROWSER_URL@', '@MOUSE_UCSC_BROWSER_URL@'])
        AS external_links
        FROM Links
        ORDER BY source_id, external_id
	]]>
      </sql>

    </sqlQuery>

    <sqlQuery name="DbRefs_Clinical">
      <column name="source_id" />
      <column name="external_links" />
      <column name="external_id" />
      <sql>
        <![CDATA[
        WITH id AS (##WDK_ID_SQL##)
    SELECT
        id.source_id,
        external_id,
        multi_replace(external_links,
        ARRAY['+ORPHANET_CLINICAL_URL+', '+OMIM_CLINICAL_URL+', '+COSMIC_CLINICAL_URL+'],
        ARRAY['@ORPHANET_CLINICAL_URL@', '@OMIM_CLINICAL_URL@', '@COSMIC_CLINICAL_URL@'])
         AS external_links
        FROM CBIL.ClinicalLinkOuts clo, id
        WHERE id.source_id = clo.source_id
        ORDER BY id.source_id, external_id
	]]>
      </sql>
    </sqlQuery>

    <sqlQuery name="DbRefs_NSeq">
      <column name="source_id" />
      <column name="external_links" />
      <column name="external_id" />
      <sql>
        <![CDATA[
        WITH id AS (##WDK_ID_SQL##)
        SELECT
        id.source_id,
        external_id,
        multi_replace(external_links,
        ARRAY['+CCDS_NUCLEOTIDE_SEQUENCES_URL+', '+ENA_NUCLEOTIDE_SEQUENCES_URL+', '+GENBANK_NUCLEOTIDE_SEQUENCES_URL+', '+MIRBASE_NUCLEOTIDE_SEQUENCES_URL+', '+REFSEQ_NUCLEOTIDE_SEQUENCES_URL+', '+RNACENTRAL_NUCLEOTIDE_SEQUENCES_URL+'],
        ARRAY['@CCDS_NUCLEOTIDE_SEQUENCES_URL@', '@ENA_NUCLEOTIDE_SEQUENCES_URL@', '@GENBANK_NUCLEOTIDE_SEQUENCES_URL@', '@MIRBASE_NUCLEOTIDE_SEQUENCES_URL@', '@REFSEQ_NUCLEOTIDE_SEQUENCES_URL@', '@RNACENTRAL_NUCLEOTIDE_SEQUENCES_URL@'])
         AS external_links
        FROM CBIL.NSeqLinkOuts nlo, id
        WHERE id.source_id = nlo.source_id
        ORDER BY id.source_id, external_id
	]]>
      </sql>
    </sqlQuery>

    <sqlQuery name="DbRefs_Proteins">
      <column name="source_id" />
      <column name="external_links" />
      <column name="external_id" />
      <sql>
        <![CDATA[
        WITH id AS (##WDK_ID_SQL##)
        SELECT
        id.source_id,
        external_id,
        multi_replace(external_links,
        ARRAY['+INTERPRO_PROTEIN_URL+', '+PDBE_PROTEIN_URL+', '+UNIPROT_PROTEIN_URL+'],
        ARRAY['@INTERPRO_PROTEIN_URL@', '@PDBE_PROTEIN_URL@', '@UNIPROT_PROTEIN_URL@'])     AS external_links
        FROM CBIL.ProteinLinkOuts plo, id
        WHERE plo.source_id = id.source_id
        ORDER BY id.source_id, external_id
	]]>
      </sql>
    </sqlQuery>
  </querySet>
</wdkModel>