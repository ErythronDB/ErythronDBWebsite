<?xml version="1.0" encoding="UTF-8"?>
<wdkModel>
  <querySet name="study001_GeneTables" queryType="table" isCacheable="false">

    <!-- =================================================================== -->
    <!-- Comparisons: Study001 -->
    <!-- =================================================================== -->
    
    <sqlQuery name="WithinLineageComparisons">
      <column name="source_id"/>
      <column name="cell_or_lineage"/>
      <column name="ref_condition"/>
      <column name="alt_condition"/>
      <column name="dataset_name"/>
      <column name="dataset_id"/>
      <column name="ref_mean_expression"/>
      <column name="alt_mean_expression"/>
      <column name="fold_change"/>
      <column name="fdr"/>

      <sql>
	<![CDATA[
		 SELECT ga.source_id,
		 extract_lineage(pan.cell_or_lineage) AS cell_or_lineage,
		 pan.ref_condition,
		 pan.alt_condition,
		 round(r.mean1::numeric, 2) AS ref_mean_expression,
		 round(r.mean2::numeric, 2) AS alt_mean_expression,
		 round(r.fold_change::numeric, 2) AS fold_change,
		 
		 round((1.0 - r.fdr)::numeric, 2) AS fdr,
		
		 pan.name AS comparison,
		 p.investigation_id AS dataset_id,
		 p.dataset_name AS dataset_name 
		 
		 FROM ErythronDB.Comparison c,
		 Study.StudyLink sl,
		 Study.ProtocolAppNode pan,
		 ErythronDB.Dataset p,
		 Results.GeneDiffResult r,
		 CBIL.GeneAttributes ga
		 
		 WHERE sl.study_id = p.dataset_study_id
		 AND p.investigation_id = 'study001' AND NOT p.is_comprehensive
		 AND sl.protocol_app_node_id = c.protocol_app_node_id
		 AND c.protocol_app_node_id = pan.protocol_app_node_id
		 AND r.protocol_app_node_id = c.protocol_app_node_id
		 AND r.gene_id = ga.gene_id
		 AND r.test_statistic::integer::boolean
		 
		 ORDER BY fold_change DESC 
	]]>
      </sql>
    </sqlQuery>
    
    <sqlQuery name="AcrossLineageComparisons">
      <column name="source_id"/>
      <column name="cell_or_lineage"/>
      <column name="ref_condition"/>
      <column name="alt_condition"/>
      <column name="dataset_name"/>
      <column name="dataset_id"/>
      <column name="ref_mean_expression"/>
      <column name="alt_mean_expression"/>
      <column name="fold_change"/>
      <column name="fdr"/>

      <sql>
	<![CDATA[
		 SELECT ga.source_id,
		 pan.cell_or_lineage,
		 extract_lineage(pan.ref_condition) AS ref_condition,
		 extract_lineage(pan.alt_condition) AS alt_condition,
		 round(r.mean1::numeric, 2) AS ref_mean_expression,
		 round(r.mean2::numeric, 2) AS alt_mean_expression,
		 round(r.fold_change::numeric, 2) AS fold_change,
		 
		 round((1.0 - r.fdr)::numeric, 2) AS fdr,

		 pan.name AS comparison,
		 p.investigation_id AS dataset_id,
		 p.dataset_name AS dataset_name 
		 
		 FROM ErythronDB.Comparison c,
		 Study.StudyLink sl,
		 Study.ProtocolAppNode pan,
		 ErythronDB.Dataset p,
		 Results.GeneDiffResult r,
		 CBIL.GeneAttributes ga
		 
		 WHERE sl.study_id = p.dataset_study_id
		 AND p.investigation_id = 'study001' AND p.is_comprehensive
		 AND sl.protocol_app_node_id = c.protocol_app_node_id
		 AND c.protocol_app_node_id = pan.protocol_app_node_id
		 AND r.protocol_app_node_id = c.protocol_app_node_id
		 AND r.gene_id = ga.gene_id
		 AND r.test_statistic::integer::boolean
		 
		 ORDER BY fold_change DESC
	]]>
      </sql>
    </sqlQuery>
    
    <!-- =================================================================== -->
    <!-- Profiles: Study001 -->
    <!-- =================================================================== -->

    <sqlQuery name="GeneExpressionProfile">
      <column name="source_id" columnType="string"/>
      <column name="primitive_gene_profile" columnType="string"/>
      <column name="fetal_gene_profile" columnType="string"/>
      <column name="adult_gene_profile" columnType="string"/>

      <sql>
	<![CDATA[
		 WITH id AS (##WDK_ID_SQL##) ,
		 profiles AS (
	         SELECT p.* 
		 FROM ErythronDB.GeneNotSampledProfile p, id
		 WHERE p.source_id = id.source_id
		 AND dataset_id = 'study001'
		 
		 UNION ALL
		 
		 SELECT p.* 
		 FROM ErythronDB.GeneNotExpressedProfile p, id
		 WHERE p.source_id = id.source_id
		 AND dataset_id = 'study001'
		 
		 UNION ALL
		 
		 SELECT p.* 
		 FROM ErythronDB.GeneExpressedProfile p, id
		 WHERE p.source_id = id.source_id
		 AND dataset_id = 'study001'

		 ORDER BY order_num),

		 AvgProfiles AS (
		 SELECT source_id, array_agg(avg_gene_profile ORDER BY order_num) AS profiles
		 FROM profiles
		 GROUP BY source_id)

		 SELECT source_id, '@PROJECT_ID@'::Text AS project_id,
		 profiles[1] AS primitive_gene_profile,
		 profiles[2] AS fetal_gene_profile,
		 profiles[3] AS adult_gene_profile
		 FROM AvgProfiles
	]]>
      </sql>
    </sqlQuery>

     <sqlQuery name="ReporterExpressionProfile">
      <column name="source_id" columnType="string"/>
      <column name="primitive_reporter_profile" columnType="string"/>
      <column name="fetal_reporter_profile" columnType="string"/>
      <column name="adult_reporter_profile" columnType="string"/>

      <sql>
	<![CDATA[
		 WITH id AS (##WDK_ID_SQL##) ,
		 profiles AS (
	         SELECT p.* 
		 FROM ErythronDB.GeneNotSampledProfile p, id
		 WHERE p.source_id = id.source_id
		 AND dataset_id = 'study001'
		 
		 UNION ALL
		 
		 SELECT p.* 
		 FROM ErythronDB.GeneNotExpressedProfile p, id
		 WHERE p.source_id = id.source_id
		 AND dataset_id = 'study001'
		 
		 UNION ALL
		 
		 SELECT p.* 
		 FROM ErythronDB.GeneExpressedProfile p, id
		 WHERE p.source_id = id.source_id
		 AND dataset_id = 'study001'

		 ORDER BY order_num),

		 RProfiles AS (
		 SELECT source_id, array_agg(reporter_profile ORDER BY order_num) AS profiles
		 FROM profiles
		 GROUP BY source_id)

		 SELECT source_id, '@PROJECT_ID@'::Text AS project_id,
		 profiles[1] AS primitive_reporter_profile,
		 profiles[2] AS fetal_reporter_profile,
		 profiles[3] AS adult_reporter_profile
		 FROM RProfiles
	]]>
      </sql>
    </sqlQuery>
    
</querySet>
</wdkModel>
