<wdkModel>
	<questionSet name="Study003" displayName="Search for Genes">
		<question name="GenesByFoldChange" urlName="FC003" 
		displayName="EPO phosphorylated PTM targets: UT-7 Cells" 
		shortDisplayName="Proteomics FC" 
		queryRef="GeneQueries.GenesByProteomicsFoldChange" recordClassRef="GeneRecordClasses.GeneRecordClass" iconName="fa fa-exchange fa-rotate-90" newBuild="2">

			<attributesList summary="product,fold_change,reference_mean,alternative_mean" sorting="fold_change desc" />
			

			<paramRef groupRef="paramGroups.dynamicParams" ref="geneParams.investigation" queryRef="study003_vq.Investigations"/>
			<paramRef groupRef="paramGroups.dynamicParams" ref="geneParams.experiment" queryRef="study003_vq.Experiments"/>
			<summary>
				<![CDATA[
    		 Find genes which are differentially expressed in a Proteomics experiment.
        		]]>
			</summary>

			<description>
				<![CDATA[
    		 Find genes which are differentially expressed in a Proteomics experiment.  First choose an experiment as the available comparisons may change.  If only one "Experiment" is shown, this field will be selected for you.
    		 <br/><br/>
    		Choose the directionality and the magnitude of the difference.  For example, selecting up-regulated with a fold difference of 2 will only show results where the intensity of the comparator is twice that of the reference.
    		 <br /><br/>
        		]]>
			</description>

			<dynamicAttributes>
				<columnAttribute name="fold_change" displayName="Fold Change" align="center" inReportMaker="false" help=""/>
				<columnAttribute name="reference_mean" displayName="Ref (Log2 Mean Intensity)" help="mean log2 intensity for the reference condition" align="center"/>
				<columnAttribute name="alternative_mean" displayName="Alt (Log2 Mean Intensity)" help="mean log2 intensity for the alternate, comparison condition" align="center"/>

			</dynamicAttributes>

			<propertyList name="displayCategory">
				<value>fold_change</value>
			</propertyList>


		</question>
</questionSet>



	<querySet name="study003_vq" queryType="vocab" isCacheable="true">
		<sqlQuery name="Investigations">
			<column name="internal"/>
			<column name="display"/>
			<column name="term"/>
			<sql>
				<![CDATA[
		 SELECT  source_id AS term, source_id AS internal, name AS display FROM Study.Study WHERE source_id = 'study003'
	]]>
			</sql>
		</sqlQuery>

		<sqlQuery name="Experiments">
			<column name="internal"/>
			<column name="display"/>
			<column name="term"/>
			<sql>
				<![CDATA[
		 	 SELECT DISTINCT replace(s.name, ', ', ' - ') AS display, s.source_id AS internal,  s.source_id AS term
			 FROM 
			 Study.Study p,
			 Study.Study s,
			 Study.StudyLink sl,
			 ErythronDB.Comparison c
			 WHERE s.investigation_id = p.study_id
			 AND p.source_id = 'study003'
			 AND sl.study_id = s.study_id
			 AND c.protocol_app_node_id = sl.protocol_app_node_id
			AND NOT (@HIDE_PRIVATE_DATA@::boolean AND (s.approaches->>'public' IS NOT NULL AND (s.approaches->>'public')::boolean IS FALSE))
			 ORDER BY s.source_id
	]]>
			</sql>
		</sqlQuery>

		<sqlQuery name="Experiments_All">
			<column name="internal"/>
			<column name="display"/>
			<column name="term"/>
			<sql>
				<![CDATA[
		 	 SELECT DISTINCT replace(s.name, ', ', ' - ') AS display, s.source_id AS internal,  s.source_id AS term
			 FROM 
			 Study.Study p,
			 Study.Study s,
			 Study.StudyLink sl,
			 ErythronDB.Comparison c
			 WHERE s.investigation_id = p.study_id
			 AND p.source_id = 'study003'
			 AND sl.study_id = s.study_id
			 AND c.protocol_app_node_id = sl.protocol_app_node_id
		
			 ORDER BY s.source_id
	]]>
			</sql>
		</sqlQuery>

		<sqlQuery name="Experiments_Cross">
			<column name="internal"/>
			<column name="display"/>
			<column name="term"/>
			<sql>
				<![CDATA[
		 	 SELECT DISTINCT replace(s.name, ', ', ' - ') AS display, s.source_id AS internal,  s.source_id AS term
			 FROM 
			 Study.Study p,
			 Study.Study s,
			 Study.StudyLink sl,
			 ErythronDB.Comparison c
			 WHERE s.investigation_id = p.study_id
			 AND p.source_id = 'study003'
			 AND sl.study_id = s.study_id
			 AND c.protocol_app_node_id = sl.protocol_app_node_id
			 
			 ORDER BY s.source_id
	]]>
			</sql>
		</sqlQuery>

		<sqlQuery name="RefConditions">
			<column name="internal"/>
			<column name="term"/>
			<column name="display"/>
			<sql>
				<![CDATA[
		 SELECT DISTINCT ps.profile_series_id AS internal, ps.label AS term, ps.label AS display, ps.order_num
		 FROM ErythronDB.Comparison c,
		 Study.Study s,
		 Study.StudyLink sl,
		 ErythronDB.ProfileSeries ps
		 WHERE s.source_id = $$experiment$$
		 AND sl.study_id = s.study_id
		 AND sl.protocol_app_node_id = c.protocol_app_node_id
		 AND c.reference_condition_id = ps.profile_series_id
		 ORDER BY order_num
	  ]]>
			</sql>
		</sqlQuery>

		<sqlQuery name="RefConditions_Cross">
			<column name="internal"/>
			<column name="term"/>
			<column name="display"/>
			<sql>
				<![CDATA[
		 SELECT DISTINCT ps.profile_series_id AS internal, ps.label AS term, ps.label AS display, ps.order_num
		 FROM ErythronDB.Comparison c,
		 Study.Study s,
		 Study.StudyLink sl,
		 ErythronDB.ProfileSeries ps
		 WHERE s.source_id = 'dset001_4'
		 AND sl.study_id = s.study_id
		 AND sl.protocol_app_node_id = c.protocol_app_node_id
		 AND c.reference_condition_id = ps.profile_series_id
		 ORDER BY order_num
	  ]]>
			</sql>
		</sqlQuery>

		<sqlQuery name="AltConditions">
			<paramRef ref="geneParams.ref_condition_indep"/>
			<column name="internal"/>
			<column name="term"/>
			<column name="display"/>
			<sql>
				<![CDATA[
    			  SELECT DISTINCT ps.profile_series_id AS internal, ps.label AS term, ps.label AS display, ps.order_num
    			  FROM ErythronDB.Comparison c,
    			  ErythronDB.ProfileSeries ps
    			  WHERE  c.reference_condition_id = $$ref_condition_indep$$
    			  AND c.alternative_condition_id = ps.profile_series_id
    			  ORDER BY order_num
    		 ]]>
			</sql>
		</sqlQuery>
	</querySet>

	<querySet name="study003_queries" queryType="id" isCacheable="true">
		<sqlQuery name="FoldChange">
			<paramRef groupRef="paramGroups.dynamicParams" ref="geneParams.investigation"/>
			<paramRef groupRef="paramGroups.dynamicParams" ref="geneParams.experiment"/>
			<paramRef groupRef="paramGroups.dynamicParams" ref="geneParams.comparison"/>
			<paramRef groupRef="paramGroups.dynamicParams" ref="geneParams.regulated_dir"/>
			<paramRef groupRef="paramGroups.dynamicParams" ref="geneParams.fold_change" default="1.5"/>
			<column name="source_id"/>
			<column name="project_id"/>
			<column name="fold_change"/>
			<column name="reference_mean"/>
			<column name="alternative_mean"/>
			<sql>
				<![CDATA[
	 WITH fc AS (
    		 SELECT ga.source_id,
    		 round((CASE WHEN pc.adj_fold_change IS NOT NULL
    		 THEN pc.adj_fold_change ELSE pc.fold_change END)::numeric,2) AS fold_change,
    		 CASE WHEN ref.intensity = 'NaN' THEN NULL ELSE round(log(2.0, ref.intensity::numeric),1) END AS reference_mean,
    		 CASE WHEN alt.intensity = 'NaN' THEN NULL ELSE round(log(2.0, alt.intensity::numeric),1) END AS alternative_mean
    		 FROM
    		 ErythronDB.Comparison c,
    		 Study.ProtocolAppNode pan,
    		 ErythronDB.PeptideIntensity ref,
    		 ErythronDB.PeptideIntensity alt,
    		 ErythronDB.PeptideComparison pc,
    		 ErythronDB.GenePeptide gp,
    		 CBIL.GeneAttributes ga
    		 WHERE c.protocol_app_node_id = pan.protocol_app_node_id
    		 AND pan.source_id = $$comparison$$
    		 AND pc.comparison_id = c.comparison_id
    		 AND pc.peptide_id = gp.gene_peptide_id
    		 AND gp.gene_id = ga.gene_id
    		 AND c.reference_condition_id = ref.protocol_app_node_id
    		 AND ref.peptide_id = pc.peptide_id
    		 AND c.alternative_condition_id = alt.protocol_app_node_id
    		 AND alt.peptide_id = pc.peptide_id
    		 AND (('$$regulated_dir$$' = 'up-regulated' AND ((pc.fold_change >= $$fold_change$$ AND pc.adj_fold_change IS NULL) OR pc.adj_fold_change >= $$fold_change$$))
    		 OR ('$$regulated_dir$$' = 'down-regulated' AND ((pc.fold_change <= -1 * $$fold_change$$ AND pc.adj_fold_change IS NULL) OR pc.adj_fold_change <= -1 * $$fold_change$$))
    		 OR ('$$regulated_dir$$' = 'up or down regulated' AND ((abs(pc.fold_change) >= $$fold_change$$ AND pc.adj_fold_change IS NULL) OR abs(pc.adj_fold_change) >= $$fold_change$$)))
    		 )
		 
    		 SELECT DISTINCT ON (source_id)
    		 source_id,
    		 '@PROJECT_ID@'::text AS project_id,
    		 first_value(fold_change) OVER wnd AS fold_change,
    		 first_value(reference_mean) OVER wnd AS reference_mean,
    		 first_value(alternative_mean) OVER wnd AS alternative_mean
    		 FROM fc
		 
    		 WINDOW wnd AS (
    		   PARTITION BY source_id ORDER BY fold_change DESC
    		   ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
    		 )
	]]>
			</sql>
		</sqlQuery>


		<sqlQuery name="FoldChange_Cross">
			<paramRef ref="geneParams.investigation"/>
			<paramRef ref="geneParams.experiment"/>
			<paramRef ref="geneParams.ref_condition_indep"/>
			<paramRef ref="geneParams.alt_condition_dep"/>
			<paramRef groupRef="paramGroups.dynamicParams" ref="geneParams.regulated_dir"/>
			<paramRef groupRef="paramGroups.dynamicParams" ref="geneParams.fold_change" default="1.5"/>
			<column name="source_id"/>
			<column name="project_id"/>
			<column name="fold_change"/>
			<column name="cell_or_lineage"/>
			<column name="ref_condition"/>
			<column name="alt_condition"/>
			<column name="confidence_interval"/>
			<column name="adj_p_value"/>
			<column name="reference_mean"/>
			<column name="alternative_mean"/>
			<sql>
				<![CDATA[
		 SELECT ga.source_id,
		 '@PROJECT_ID@'::text AS project_id,
		 pan.name AS comparison,
		 split_part(pan.name, ': ', 2) AS cell_or_lineage,
		 split_part(split_part(pan.name, ': ', 1), ' v ', 1) AS alt_condition,
		 split_part(split_part(pan.name, ': ', 1), ' v ', 2) AS ref_condition,
		 round(r.mean1::numeric, 2) AS reference_mean,
		 round(r.mean2::numeric, 2) AS alternative_mean,
		 round(fold_change::numeric, 2) AS fold_change,
		 CASE WHEN r.adj_p_value < 0.0001 THEN to_char(r.adj_p_value, '9.99EEEE') ELSE round(r.adj_p_value::numeric,4)::text END AS adj_p_value,
		 '[' || round(confidence_down::numeric, 2) || ', ' || round(confidence_up::numeric, 2) || ']' AS confidence_interval
		 FROM Results.GeneDiffResult r,
		 CBIL.GeneAttributes ga, 
		 Study.ProtocolAppNode pan,
		 ErythronDB.Comparison c
		 WHERE ga.gene_id = r.gene_id
		 AND pan.protocol_app_node_id = c.protocol_app_node_id
		 AND c.reference_condition_id = $$ref_condition$$
		 AND c.alternative_condition_id = $$alt_condition$$
		 AND c.protocol_app_node_id = r.protocol_app_node_id
		 AND adj_p_value <= 0.05
		 AND (('$$regulated_dir$$' = 'up-regulated' AND r.fold_change >= $$fold_change$$ )
		 OR ('$$regulated_dir$$' = 'down-regulated' AND r.fold_change <= -1 * $$fold_change$$)
		 OR ('$$regulated_dir$$' = 'up or down regulated' AND abs(r.fold_change) >= $$fold_change$$))
	]]>
			</sql>
		</sqlQuery>


		<sqlQuery name="Expression">
			<paramRef groupRef="paramGroups.dynamicParams" ref="geneParams.investigation" queryRef="study003_vq.Investigations"/>
			<paramRef groupRef="paramGroups.dynamicParams" ref="geneParams.experiment" queryRef="study003_vq.Experiments"/>
			<paramRef groupRef="paramGroups.dynamicParams" ref="geneParams.sample"/>
			<paramRef groupRef="paramGroups.dynamicParams" ref="geneParams.minimum_percentile" default="80"/>
			<paramRef groupRef="paramGroups.dynamicParams" ref="geneParams.maximum_percentile" default="100"/>
			<column name="source_id"/>
			<column name="project_id"/>
			<column name="percentile"/>
			<column name="mean_expression"/>
			<column name="standard_error"/>
			<sql>
				<![CDATA[
		  SELECT DISTINCT gene_source_id AS source_id,
		 'ErythronDB'::text AS project_id,
		 first_value(value) OVER (w_exp) AS mean_expression,
		 first_value(standard_error) OVER (w_exp) AS standard_error,
		 first_value(sample_description) OVER (w_exp) AS sample,
		 first_value(round((percentile * 100)::numeric, 1)) OVER (w_exp) AS percentile
		 FROM
		 ErythronDB.AvgGeneExpressionDataTable dt,
		 Study.Study s
		 WHERE s.study_id = dt.dataset_id
		 AND s.source_id = $$experiment$$
		 AND percentile * 100 BETWEEN $$minimum_percentile$$ AND $$maximum_percentile$$
		 AND sample_description IN ($$sample$$)
		 WINDOW w_exp AS (PARTITION BY gene_source_id ORDER BY value DESC)
	]]>
			</sql>
		</sqlQuery>
	</querySet>
</wdkModel>
